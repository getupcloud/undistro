
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: helmreleases.getupcloud.com
spec:
  group: getupcloud.com
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
    - hr
    - hrs
    singular: helmrelease
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Release is the name of the Helm release, as given by Helm.
      jsonPath: .status.releaseName
      name: Release
      type: string
    - description: Phase is the current release phase being performed for the HelmRelease.
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: ReleaseStatus is the status of the Helm release, as given by Helm.
      jsonPath: .status.releaseStatus
      name: ReleaseStatus
      type: string
    - jsonPath: .status.conditions[?(@.type=="Released")].message
      name: Message
      type: string
    - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HelmRelease is a type to represent a Helm release.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              chart:
                properties:
                  name:
                    description: Name is the name of the Helm chart _without_ an alias, e.g. redis (for `helm upgrade [flags] stable/redis`).
                    type: string
                  repository:
                    description: RepoURL is the URL of the Helm repository, e.g. `https://kubernetes-charts.storage.googleapis.com` or `https://charts.example.com`.
                    type: string
                  version:
                    description: Version is the targeted Helm chart version, e.g. 7.0.1.
                    type: string
                type: object
              clusterName:
                type: string
              forceUpgrade:
                description: Force will mark this Helm release to `--force` upgrades. This forces the resource updates through delete/recreate if needed.
                type: boolean
              maxHistory:
                description: MaxHistory is the maximum amount of revisions to keep for the Helm release. If not supplied, it defaults to 10.
                type: integer
              releaseName:
                description: ReleaseName is the name of the The Helm release. If not supplied, it will be generated by affixing the namespace to the resource name.
                type: string
              resetValues:
                description: ResetValues will mark this Helm release to reset the values to the defaults of the targeted chart before performing an upgrade. Not explicitly setting this to `false` equals to `true` due to the declarative nature of the operator.
                type: boolean
              rollback:
                description: The rollback settings for this Helm release.
                properties:
                  disableHooks:
                    description: DisableHooks will mark this Helm release to prevent hooks from running during the rollback.
                    type: boolean
                  enable:
                    description: Enable will mark this Helm release for rollbacks.
                    type: boolean
                  force:
                    description: Force will mark this Helm release to `--force` rollbacks. This forces the resource updates through delete/recreate if needed.
                    type: boolean
                  maxRetries:
                    description: MaxRetries is the maximum amount of upgrade retries the operator should make before bailing.
                    format: int64
                    type: integer
                  recreate:
                    description: Recreate will mark this Helm release to `--recreate-pods` for if applicable. This performs pod restarts.
                    type: boolean
                  retry:
                    description: Retry will mark this Helm release for upgrade retries after a rollback.
                    type: boolean
                  timeout:
                    description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during rollback.
                    format: int64
                    type: integer
                  wait:
                    description: Wait will mark this Helm release to wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.
                    type: boolean
                type: object
              skipCRDs:
                description: SkipCRDs will mark this Helm release to skip the creation of CRDs during a Helm 3 installation.
                type: boolean
              targetNamespace:
                description: TargetNamespace overrides the targeted namespace for the Helm release. The default namespace equals to the namespace of the HelmRelease resource.
                type: string
              test:
                description: The test settings for this Helm release.
                properties:
                  cleanup:
                    description: Cleanup, when targeting Helm 2, determines whether to delete test pods between each test run initiated by the Helm Operator.
                    type: boolean
                  enable:
                    description: Enable will mark this Helm release for tests.
                    type: boolean
                  ignoreFailures:
                    description: IgnoreFailures will cause a Helm release to be rolled back if it fails otherwise it will be left in a released state
                    type: boolean
                  timeout:
                    description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during test.
                    format: int64
                    type: integer
                type: object
              timeout:
                description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during installation and upgrade operations.
                format: int64
                type: integer
              values:
                description: Values holds the values for this Helm release.
                type: object
              valuesFrom:
                items:
                  properties:
                    chartFileRef:
                      description: The reference to a local chart file with release values.
                      properties:
                        optional:
                          description: Optional will mark this ChartFileSelector as optional. The result of this are that operations are permitted without the source, due to it e.g. being temporarily unavailable.
                          type: boolean
                        path:
                          description: Path is the file path to the source relative to the chart root.
                          type: string
                      required:
                      - path
                      type: object
                    configMapKeyRef:
                      description: The reference to a config map with release values.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                        optional:
                          type: boolean
                      required:
                      - name
                      type: object
                    externalSourceRef:
                      description: The reference to an external source with release values.
                      properties:
                        optional:
                          description: Optional will mark this ExternalSourceSelector as optional. The result of this are that operations are permitted without the source, due to it e.g. being temporarily unavailable.
                          type: boolean
                        url:
                          description: URL is the URL of the external source.
                          type: string
                      required:
                      - url
                      type: object
                    secretKeyRef:
                      description: The reference to a secret with release values.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                        optional:
                          type: boolean
                      required:
                      - name
                      type: object
                  type: object
                type: array
              wait:
                description: Wait will mark this Helm release to wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.
                type: boolean
            type: object
          status:
            description: HelmReleaseStatus contains status information about an HelmRelease.
            properties:
              lastAttemptedRevision:
                description: LastAttemptedRevision is the revision of the latest chart sync, and may be of a failed release.
                type: string
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed by the operator.
                format: int64
                type: integer
              phase:
                description: Phase the release is in, one of ('ChartFetched', 'ChartFetchFailed', 'Installing', 'Upgrading', 'Deployed', 'DeployFailed', 'Testing', 'TestFailed', 'Tested', 'Succeeded', 'RollingBack', 'RolledBack', 'RollbackFailed')
                enum:
                - ChartFetched
                - ChartFetchFailed
                - Installing
                - Upgrading
                - Deployed
                - DeployFailed
                - Testing
                - TestFailed
                - Tested
                - Succeeded
                - Failed
                - RollingBack
                - RolledBack
                - RollbackFailed
                type: string
              releaseName:
                description: ReleaseName is the name as either supplied or generated.
                type: string
              releaseStatus:
                description: ReleaseStatus is the status as given by Helm for the release managed by this resource.
                type: string
              revision:
                description: Revision holds the Git hash or version of the chart currently deployed.
                type: string
              rollbackCount:
                description: RollbackCount records the amount of rollback attempts made, it is incremented after a rollback failure and reset after a successful upgrade or revision change.
                format: int64
                type: integer
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

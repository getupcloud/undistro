name: undistro-release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    name: Release UnDistro
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Set up Node 15
        uses: actions/setup-node@v2
        with:
          node-version: "15"
        id: node

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: vars from bash
        run: ./hack/version.sh

      - name: Build UI
        working-directory: ./UI
        run: |
          yarn
          yarn build

      - name: docker build and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
          docker build -t getupioundistro/undistro:$GIT_VERSION .
          docker push getupioundistro/undistro:$GIT_VERSION

      - name: Helm Push
        working-directory: ./charts
        env:
          HELM_LOGIN: ${{ secrets.HELM_LOGIN }}
          HELM_PASSWORD: ${{ secrets.HELM_PASSWORD }}
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push.git
          helm repo add undistro https://charts.undistro.io
          helm push cert-manager undistro --username $HELM_LOGIN --password  $HELM_PASSWORD --force
          helm push cluster-api undistro --username $HELM_LOGIN --password  $HELM_PASSWORD --force
          helm push undistro undistro --username $HELM_LOGIN --password  $HELM_PASSWORD --force
          helm push undistro-aws undistro --username $HELM_LOGIN --password  $HELM_PASSWORD --force
          helm push kyverno undistro --username $HELM_LOGIN --password  $HELM_PASSWORD --force
          helm push contour undistro --username $HELM_LOGIN --password  $HELM_PASSWORD --force

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

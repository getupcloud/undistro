apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: undistro-controller-manager
  name: undistro-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    undistro.io: undistro
  annotations:
    cert-manager.io/inject-ca-from: undistro-system/undistro-serving-cert
    controller-gen.kubebuilder.io/version: v0.4.1
  name: clusters.app.undistro.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: app.undistro.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    shortNames:
      - cl
    singular: cluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.kubernetesVersion
          name: k8s
          type: string
        - jsonPath: .spec.infrastructureProvider.name
          name: Infra
          type: string
        - jsonPath: .status.totalWorkerPools
          name: Worker Pools
          type: integer
        - jsonPath: .status.totalWorkerReplicas
          name: Worker Replicas
          type: integer
        - jsonPath: .spec.controlPlane.replicas
          name: ControlPlane Replicas
          type: integer
        - jsonPath: .status.bastionPublicIP
          name: Bastion IP
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Cluster is the Schema for the clusters API
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: ClusterSpec defines the desired state of Cluster
              properties:
                bastion:
                  properties:
                    allowedCIDRBlocks:
                      items:
                        type: string
                      type: array
                    disableIngressRules:
                      type: boolean
                    enabled:
                      type: boolean
                    instanceType:
                      type: string
                  type: object
                controlPlane:
                  properties:
                    endpoint:
                      description: APIEndpoint represents a reachable Kubernetes API endpoint.
                      properties:
                        host:
                          description: The hostname on which the API server is serving.
                          type: string
                        port:
                          description: The port on which the API server is serving.
                          format: int32
                          type: integer
                      required:
                        - host
                        - port
                      type: object
                    internalLB:
                      type: boolean
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                    machineType:
                      type: string
                    providerTags:
                      additionalProperties:
                        type: string
                      type: object
                    replicas:
                      format: int32
                      type: integer
                    subnet:
                      type: string
                    taints:
                      items:
                        description: The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
                        properties:
                          effect:
                            description: Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Required. The taint key to be applied to a node.
                            type: string
                          timeAdded:
                            description: TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
                            format: date-time
                            type: string
                          value:
                            description: The taint value corresponding to the taint key.
                            type: string
                        required:
                          - effect
                          - key
                        type: object
                      type: array
                  type: object
                infrastructureProvider:
                  properties:
                    env:
                      items:
                        description: EnvVar represents an environment variable present in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                                required:
                                  - key
                                type: object
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the specified API version.
                                    type: string
                                required:
                                  - fieldPath
                                type: object
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: string
                                  divisor:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: string
                                required:
                                  - resource
                                type: object
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                  - key
                                type: object
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                    flavor:
                      type: string
                    name:
                      type: string
                    region:
                      type: string
                    sshKey:
                      type: string
                  type: object
                kubernetesVersion:
                  type: string
                network:
                  properties:
                    apiServerPort:
                      description: APIServerPort specifies the port the API Server should bind to. Defaults to 6443.
                      format: int32
                      type: integer
                    multiZone:
                      type: boolean
                    pods:
                      description: The network ranges from which Pod networks are allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                        - cidrBlocks
                      type: object
                    serviceDomain:
                      description: Domain name for services.
                      type: string
                    services:
                      description: The network ranges from which service VIPs are allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                        - cidrBlocks
                      type: object
                    subnets:
                      items:
                        properties:
                          cidrBlock:
                            type: string
                          id:
                            type: string
                          isPublic:
                            type: boolean
                          zone:
                            type: string
                        type: object
                      type: array
                    vpc:
                      properties:
                        cidrBlock:
                          type: string
                        id:
                          type: string
                        isPublic:
                          type: boolean
                        zone:
                          type: string
                      type: object
                  type: object
                paused:
                  type: boolean
                workers:
                  items:
                    properties:
                      autoscaling:
                        properties:
                          enabled:
                            type: boolean
                          maxSize:
                            description: The maximum size of the group.
                            format: int32
                            type: integer
                          minSize:
                            description: The minimum size of the group.
                            format: int32
                            type: integer
                        type: object
                      infraNode:
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      launchTemplateReference:
                        properties:
                          id:
                            description: The ID of the launch template for this nodegroup
                            type: string
                          version:
                            description: The version of the launch template for this nodegroup
                            type: string
                        type: object
                      machineType:
                        type: string
                      providerTags:
                        additionalProperties:
                          type: string
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      subnet:
                        type: string
                      taints:
                        items:
                          description: The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
                          properties:
                            effect:
                              description: Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                              type: string
                            key:
                              description: Required. The taint key to be applied to a node.
                              type: string
                            timeAdded:
                              description: TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
                              format: date-time
                              type: string
                            value:
                              description: The taint value corresponding to the taint key.
                              type: string
                          required:
                            - effect
                            - key
                          type: object
                        type: array
                    type: object
                  type: array
              type: object
            status:
              description: ClusterStatus defines the observed state of Cluster
              properties:
                bastionConfig:
                  properties:
                    allowedCIDRBlocks:
                      items:
                        type: string
                      type: array
                    disableIngressRules:
                      type: boolean
                    enabled:
                      type: boolean
                    instanceType:
                      type: string
                  type: object
                bastionPublicIP:
                  type: string
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                controlPlane:
                  properties:
                    endpoint:
                      description: APIEndpoint represents a reachable Kubernetes API endpoint.
                      properties:
                        host:
                          description: The hostname on which the API server is serving.
                          type: string
                        port:
                          description: The port on which the API server is serving.
                          format: int32
                          type: integer
                      required:
                        - host
                        - port
                      type: object
                    internalLB:
                      type: boolean
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                    machineType:
                      type: string
                    providerTags:
                      additionalProperties:
                        type: string
                      type: object
                    replicas:
                      format: int32
                      type: integer
                    subnet:
                      type: string
                    taints:
                      items:
                        description: The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
                        properties:
                          effect:
                            description: Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Required. The taint key to be applied to a node.
                            type: string
                          timeAdded:
                            description: TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
                            format: date-time
                            type: string
                          value:
                            description: The taint value corresponding to the taint key.
                            type: string
                        required:
                          - effect
                          - key
                        type: object
                      type: array
                  type: object
                kubernetesVersion:
                  type: string
                lastUsedUID:
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                totalWorkerPools:
                  format: int32
                  type: integer
                totalWorkerReplicas:
                  format: int32
                  type: integer
                workers:
                  items:
                    properties:
                      autoscaling:
                        properties:
                          enabled:
                            type: boolean
                          maxSize:
                            description: The maximum size of the group.
                            format: int32
                            type: integer
                          minSize:
                            description: The minimum size of the group.
                            format: int32
                            type: integer
                        type: object
                      infraNode:
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      launchTemplateReference:
                        properties:
                          id:
                            description: The ID of the launch template for this nodegroup
                            type: string
                          version:
                            description: The version of the launch template for this nodegroup
                            type: string
                        type: object
                      machineType:
                        type: string
                      providerTags:
                        additionalProperties:
                          type: string
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      subnet:
                        type: string
                      taints:
                        items:
                          description: The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
                          properties:
                            effect:
                              description: Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                              type: string
                            key:
                              description: Required. The taint key to be applied to a node.
                              type: string
                            timeAdded:
                              description: TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
                              format: date-time
                              type: string
                            value:
                              description: The taint value corresponding to the taint key.
                              type: string
                          required:
                            - effect
                            - key
                          type: object
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    undistro.io: undistro
  annotations:
    cert-manager.io/inject-ca-from: undistro-system/undistro-serving-cert
    controller-gen.kubebuilder.io/version: v0.4.1
  name: defaultpolicies.app.undistro.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: app.undistro.io
  names:
    kind: DefaultPolicies
    listKind: DefaultPoliciesList
    plural: defaultpolicies
    singular: defaultpolicies
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: DefaultPolicies is the Schema for the defaultpolicies API
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: DefaultPoliciesSpec defines the desired state of DefaultPolicies
              properties:
                clusterName:
                  type: string
                excludePolicies:
                  items:
                    type: string
                  type: array
                paused:
                  type: boolean
              type: object
            status:
              description: DefaultPoliciesStatus defines the observed state of DefaultPolicies
              properties:
                appliedPolicies:
                  items:
                    type: string
                  type: array
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    undistro.io: undistro
  annotations:
    cert-manager.io/inject-ca-from: undistro-system/undistro-serving-cert
    controller-gen.kubebuilder.io/version: v0.4.1
  name: helmreleases.app.undistro.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: app.undistro.io
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
      - hr
    singular: helmrelease
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.clusterName
          name: Cluster
          type: string
        - jsonPath: .spec.chart.name
          name: Chart
          type: string
        - jsonPath: .spec.chart.version
          name: Version
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              properties:
                afterApplyObjects:
                  description: AfterApplyObjects holds the objects that will be applied after this helm release installation
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                autoUpgrade:
                  type: boolean
                beforeApplyObjects:
                  description: BeforeApplyObjects holds the objects that will be applied before this helm release installation
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                chart:
                  properties:
                    name:
                      type: string
                    repository:
                      description: RepoURL is the URL of the Helm repository, e.g. `https://kubernetes-charts.storage.googleapis.com` or `https://charts.example.com`.
                      type: string
                    secretRef:
                      description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                          type: string
                      type: object
                    version:
                      type: string
                  type: object
                clusterName:
                  type: string
                dependencies:
                  description: Dependencies holds the referencies of objects this HelmRelease depends on
                  items:
                    description: 'ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.  1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.  2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular     restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".     Those cannot be well described when embedded.  3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.  4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity     during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple     and the version of the actual struct is irrelevant.  5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type     will affect numerous schemas.  Don''t make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                        type: string
                      kind:
                        description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                        type: string
                      name:
                        description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                        type: string
                      namespace:
                        description: "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                        type: string
                      resourceVersion:
                        description: "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                        type: string
                      uid:
                        description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                        type: string
                    type: object
                  type: array
                forceUpgrade:
                  description: Force will mark this Helm release to `--force` upgrades. This forces the resource updates through delete/recreate if needed.
                  type: boolean
                maxHistory:
                  type: integer
                paused:
                  type: boolean
                releaseName:
                  type: string
                resetValues:
                  description: ResetValues will mark this Helm release to reset the values to the defaults of the targeted chart before performing an upgrade. Not explicitly setting this to `false` equals to `true` due to the declarative nature of the operator.
                  type: boolean
                rollback:
                  description: The rollback settings for this Helm release.
                  properties:
                    disableHooks:
                      description: DisableHooks will mark this Helm release to prevent hooks from running during the rollback.
                      type: boolean
                    force:
                      description: Force will mark this Helm release to `--force` rollbacks. This forces the resource updates through delete/recreate if needed.
                      type: boolean
                    recreate:
                      description: Recreate will mark this Helm release to `--recreate-pods` for if applicable. This performs pod restarts.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during rollback.
                      type: string
                    wait:
                      description: Wait will mark this Helm release to wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.
                      type: boolean
                  type: object
                skipCRDs:
                  description: SkipCRDs will mark this Helm release to skip the creation of CRDs during a Helm 3 installation.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace overrides the targeted namespace for the Helm release. The default namespace equals to the namespace of the HelmRelease resource.
                  type: string
                test:
                  description: The test settings for this Helm release.
                  properties:
                    cleanup:
                      description: Cleanup, when targeting Helm 2, determines whether to delete test pods between each test run initiated by the Helm Operator.
                      type: boolean
                    enable:
                      description: Enable will mark this Helm release for tests.
                      type: boolean
                    ignoreFailures:
                      description: IgnoreFailures will cause a Helm release to be rolled back if it fails otherwise it will be left in a released state
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during test.
                      type: string
                  type: object
                timeout:
                  description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during installation and upgrade operations.
                  type: string
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: ValuesFrom holds references to resources containing Helm values for this HelmRelease, and information about how they should be merged.
                  items:
                    description: ValuesReference contains a reference to a resource containing Helm values, and optionally the key they can be found at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: Name of the values referent. Should reside in the same namespace as the referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: Optional marks this ValuesReference as optional. When set, a not found error for the values reference is ignored, but any ValuesKey, TargetPath or transient error will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: TargetPath is the YAML dot notation path the value should be merged at. When set, the ValuesKey is expected to be a single flat value. Defaults to 'None', which results in the values getting merged at the root.
                        type: string
                      valuesKey:
                        description: ValuesKey is the data key where the values.yaml or a specific value can be found at. Defaults to 'values.yaml'.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                wait:
                  description: Wait will mark this Helm release to wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.
                  type: boolean
              type: object
            status:
              description: HelmReleaseStatus defines the observed state of HelmRelease// HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                failures:
                  description: Failures is the reconciliation failure count against the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                installFailures:
                  description: InstallFailures is the install failure count against the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAppliedRevision:
                  description: LastAppliedRevision is the revision of the last successfully applied source.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastAttemptedValuesChecksum:
                  description: LastAttemptedValuesChecksum is the SHA1 checksum of the values of the last reconciliation attempt.
                  type: string
                lastReleaseRevision:
                  description: LastReleaseRevision is the revision of the last successful Helm release.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                upgradeFailures:
                  description: UpgradeFailures is the upgrade failure count against the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    undistro.io: undistro
  annotations:
    cert-manager.io/inject-ca-from: undistro-system/undistro-serving-cert
    controller-gen.kubebuilder.io/version: v0.4.1
  name: providers.config.undistro.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: config.undistro.io
  names:
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.providerName
          name: Provider Name
          type: string
        - jsonPath: .spec.providerVersion
          name: Provider Version
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the providers API
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of Provider
              properties:
                autoUpgrade:
                  default: false
                  type: boolean
                configuration:
                  x-kubernetes-preserve-unknown-fields: true
                configurationFrom:
                  items:
                    description: ValuesReference contains a reference to a resource containing Helm values, and optionally the key they can be found at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: Name of the values referent. Should reside in the same namespace as the referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: Optional marks this ValuesReference as optional. When set, a not found error for the values reference is ignored, but any ValuesKey, TargetPath or transient error will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: TargetPath is the YAML dot notation path the value should be merged at. When set, the ValuesKey is expected to be a single flat value. Defaults to 'None', which results in the values getting merged at the root.
                        type: string
                      valuesKey:
                        description: ValuesKey is the data key where the values.yaml or a specific value can be found at. Defaults to 'values.yaml'.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                paused:
                  default: false
                  type: boolean
                providerName:
                  type: string
                providerType:
                  type: string
                providerVersion:
                  type: string
                repository:
                  properties:
                    secretRef:
                      description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                          type: string
                      type: object
                    url:
                      default: https://registry.undistro.io/chartrepo/library
                      type: string
                  type: object
              type: object
            status:
              description: ProviderStatus defines the observed state of Provider
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                helmReleaseName:
                  type: string
                lastAppliedVersion:
                  type: string
                lastAttemptedVersion:
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: "{{.Name}}"
  namespace: "{{.Namespace}}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AWSCluster
    name: "{{.Name}}"
    namespace: "{{.Namespace}}"
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    name: "{{.Name}}-control-plane"
    namespace: "{{.Namespace}}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSCluster
metadata:
  name: "{{.Name}}"
  namespace: "{{.Namespace}}"
spec:
  region: '{{variable "AWS_REGION"}}'
  sshKeyName: "{{.Spec.InfrastructureProvider.SSHKey}}"
  {{if .Spec.Network}}
  networkSpec:
    vpc:
      id: {{.Spec.Network.VPC}}
    subnets:
    {{range .Spec.Network.Subnets}}
    - id: {{.}}
    {{end}}
  {{end}}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
metadata:
  name: "{{.Name}}-control-plane"
  namespace: "{{.Namespace}}"
spec:
  replicas: {{.Spec.ControlPlaneNode.Replicas}}
  infrastructureTemplate:
    kind: AWSMachineTemplate
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    name: "{{.Name}}-control-plane"
    namespace: "{{.Namespace}}"
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: {{"'{{ ds.meta_data.local_hostname }}'"}}
        kubeletExtraArgs:
          cloud-provider: aws
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: aws
      controllerManager:
        extraArgs:
          cloud-provider: aws
    joinConfiguration:
      nodeRegistration:
        name: {{"'{{ ds.meta_data.local_hostname }}'"}}
        kubeletExtraArgs:
          cloud-provider: aws
  version: "{{.Spec.KubernetesVersion}}"
---
kind: AWSMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
metadata:
  name: "{{.Name}}-control-plane"
  namespace: "{{.Namespace}}"
spec:
  template:
    spec:
      instanceType: "{{.Spec.ControlPlaneNode.MachineType}}"
      iamInstanceProfile: "control-plane.cluster-api-provider-aws.sigs.k8s.io"
      sshKeyName: "{{.Spec.InfrastructureProvider.SSHKey}}"
      {{if .Spec.ControlPlaneNode.Subnet}}
      subnet: {{.Spec.ControlPlaneNode.Subnet}}
      {{end}}
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: "{{.Name}}-md-0"
  namespace: "{{.Namespace}}"
spec:
  clusterName: "{{.Name}}"
  replicas: {{.Spec.WorkerNode.Replicas}}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "{{.Name}}"
      version: "{{.Spec.KubernetesVersion}}"
      bootstrap:
        configRef:
          name: "{{.Name}}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          namespace: "{{.Namespace}}"
      infrastructureRef:
        name: "{{.Name}}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: AWSMachineTemplate
        namespace: "{{.Namespace}}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSMachineTemplate
metadata:
  name: "{{.Name}}-md-0"
  namespace: "{{.Namespace}}"
spec:
  template:
    spec:
      instanceType: "{{.Spec.WorkerNode.MachineType}}"
      iamInstanceProfile: "nodes.cluster-api-provider-aws.sigs.k8s.io"
      sshKeyName: "{{.Spec.InfrastructureProvider.SSHKey}}"
      {{if .Spec.WorkerNode.Subnet}}
      subnet: {{.Spec.WorkerNode.Subnet}}
      {{end}}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: "{{.Name}}-md-0"
  namespace: "{{.Namespace}}"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: {{"'{{ ds.meta_data.local_hostname }}'"}}
          kubeletExtraArgs:
            cloud-provider: aws
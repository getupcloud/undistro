{
	"name": "Undistro",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick an Debian version: buster, stretch
		"args": { "VARIANT": "buster" }
	},

	// Set *default* container specific settings.json values on container create.
	"settings": { 
        "terminal.integrated.shell.linux": "/usr/bin/zsh",
        "go.useGoProxyToCheckForToolUpdates": false,
		"go.useLanguageServer": true,
		"go.gopath": "/go",
		"go.goroot": "/usr/local/go",
        "go.toolsGopath": "/go/bin",
        "go.autocompleteUnimportedPackages": true,
        "editor.formatOnSave": true,
        "go.coverOnSingleTest": true,
        "go.coverOnSingleTestFile": true,
        "go.docsTool": "gogetdoc",
        "go.formatTool": "goimports",
        "go.lintTool": "staticcheck",
        "go.useCodeSnippetsOnFunctionSuggest": true,
        "go.useCodeSnippetsOnFunctionSuggestWithoutType": true,
        "go.addTags": {
            "tags": "json",
            "options": "json=omitempty",
            "promptForTags": true,
            "transform": "camelcase"
        },
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
        "golang.Go",
        "ms-azuretools.vscode-docker",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
    ],


	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [10350],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined", "--init" ],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "vscode",

    "remoteEnv": { "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}" },
    
    "overrideCommand": false,

    "postStartCommand": "bash .devcontainer/fix-bind-mount.sh",
}